{"version":3,"sources":["../src/rendering.js"],"names":["link","scope","elem","attrs","ctrl","data","panel","find","$tooltip","$","events","on","legendType","render","setTimeout","noDataPoints","html","addecharts","option","width","height","plotCanvas","container","echartPanel","echarts","init","chartsType","pieChartsOptions","barChartsOptions","mapChartsOptions","setOption","backgroundColor","css","seriesData","valueList","series","map","item","value","pop","push","name","get","geoJson","hideLoading","registerMap","tooltip","trigger","formatter","visualMap","min","max","Math","apply","text","realtime","calculable","inRange","color","type","mapType","itemStyle","normal","label","show","fontSize","emphasis","labelOptions","legend","position","top","orient","bottom","right","legendData","Set","maxRadius","slice","i","radius","length","itemData","add","borderColor","borderWidth","borderRadius","rich","a","lineHeight","align","hr","b","per","padding","Array","from","labelOption","distance","verticalAlign","rotate","textBorderColor","console","log","textColor","textStyle","axisPointer","xAxis","axisTick","metrics","axisLabel","xlabel","nameTextStyle","axisLine","lineStyle","splitLine","yAxis","grid","stack","showSymbol","hoverAnimation","incrementRenderCounter","renderingCompleted","_"],"mappings":"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","sourcesContent":["import _ from 'lodash';\r\nimport $ from 'jquery';\r\nimport 'jquery.flot';\r\nimport 'jquery.flot.pie';\r\nimport echarts from './echarts/echarts.min';\r\n\r\nexport default function link(scope, elem, attrs, ctrl) {\r\n    var data;\r\n    var panel = ctrl.panel;\r\n    elem = elem.find('.echarts-panel__chart');\r\n    var $tooltip = $('<div id=\"tooltip\">');\r\n\r\n    ctrl.events.on('render', function () { // 触发刷新/重新加载事件\r\n        if (panel.legendType === 'Right side') {\r\n            render(false);\r\n            setTimeout(function () {\r\n                render(true);\r\n            }, 50);\r\n        } else {\r\n            render(true);\r\n        }\r\n    });\r\n\r\n\r\n    function noDataPoints() {\r\n        var html = '<div class=\"datapoints-warning\"><span class=\"small\">No data points</span></div>';\r\n        elem.html(html);\r\n    }\r\n\r\n    function addecharts() { // 绘图\r\n        let option;\r\n        var width = elem.width();\r\n        var height = ctrl.height;\r\n        // var size = Math.min(width, height);\r\n        const plotCanvas = $('<div style=\"height: 100%\"></div>');\r\n        elem.html(plotCanvas);\r\n        const container = plotCanvas[0];\r\n\r\n        var echartPanel = echarts.init(container);\r\n\r\n        if (ctrl.panel.chartsType === 'pie') {\r\n            option = pieChartsOptions(echartPanel)\r\n        } else if (ctrl.panel.chartsType === 'bar' || ctrl.panel.chartsType === 'line') {\r\n            option = barChartsOptions(echartPanel)\r\n        } else if (ctrl.panel.chartsType === 'map') {\r\n            option = mapChartsOptions(echartPanel);\r\n        }\r\n        if (option && typeof option === \"object\") {\r\n            echartPanel.setOption(option, true);\r\n        }\r\n        let backgroundColor = $('body').css('background-color')\r\n\r\n    }\r\n\r\n    function mapChartsOptions(echartPanel) {\r\n        let option = {};\r\n        let seriesData = [];\r\n        let valueList = [];\r\n        data.series.map(item => {\r\n            let value = item.data.pop().value[1];\r\n            valueList.push(value);\r\n            seriesData.push({\r\n                name: item.name,\r\n                value: value,\r\n            })\r\n        });\r\n        $.get('public/plugins/virnet-echarts-panel/echarts/datav-china.json', function (geoJson) {\r\n            echartPanel.hideLoading();\r\n            echarts.registerMap('china', geoJson);\r\n            option = {\r\n                tooltip: {\r\n                    trigger: 'item',\r\n                    formatter: '{b}<br/>{c}'\r\n                },\r\n                visualMap: {\r\n                    min: 0,\r\n                    max: Math.max.apply(null, valueList) * 0.8,\r\n                    text: ['High', 'Low'],\r\n                    realtime: false,\r\n                    calculable: true,\r\n                    inRange: {\r\n                        color: ['rgb(200,255,255)', 'rgb(36,104,202)']\r\n                    }\r\n                },\r\n                series: [\r\n                    {\r\n                        type: 'map',\r\n                        mapType: 'china', // 自定义扩展图表类型\r\n                        itemStyle: {\r\n                            normal: {\r\n                                label: {\r\n                                    show: ctrl.panel.label.show,\r\n                                    fontSize: ctrl.panel.label.fontSize\r\n                                }\r\n                            },\r\n                            emphasis: {label: {show: true}}\r\n                        },\r\n                        data: seriesData\r\n                    }\r\n                ]\r\n\r\n            };\r\n            echartPanel.setOption(option, true);\r\n        });\r\n        return option;\r\n    }\r\n\r\n    function pieChartsOptions(echartPanel) {\r\n        let labelOptions;\r\n        let option = {\r\n            tooltip: {\r\n                trigger: 'item',\r\n                formatter: \"{a} <br/>{b}: {c} ({d}%)\"\r\n            },\r\n            legend: {\r\n                type: 'scroll',\r\n                show: ctrl.panel.legend.show,\r\n                data: []\r\n            },\r\n            series: []\r\n        };\r\n\r\n        if (ctrl.panel.legend.position === \"top\") {\r\n            option.legend.top = 10;\r\n            option.legend.orient = \"horizontal\";\r\n        } else if (ctrl.panel.legend.position === \"bottom\") {\r\n            option.legend.bottom = 10;\r\n            option.legend.orient = \"horizontal\";\r\n        } else if (ctrl.panel.legend.position === \"right\") {\r\n            option.legend.right = 10;\r\n            option.legend.orient = \"vertical\";\r\n        }\r\n        let legendData = new Set();\r\n        let maxRadius;\r\n        if (ctrl.panel.label.show) {\r\n            maxRadius = 80;\r\n        } else {\r\n            maxRadius = 100;\r\n        }\r\n        data.series = data.series.slice(0, 5);\r\n        data.series.map((item, i) => {\r\n            let radius = [\r\n                maxRadius * (data.series.length - i - 1) / data.series.length + '%',\r\n                maxRadius * (data.series.length - i) / data.series.length * 0.9 + '%'\r\n            ];\r\n            let itemData = item.data.map(i => {\r\n                legendData.add(i.name);\r\n                return {name: i.name, value: i.value[1]}\r\n            });\r\n            if (i !== 0) {\r\n                labelOptions = {\r\n                    normal: {\r\n                        show: ctrl.panel.label.show,\r\n                        position: 'inner'\r\n                    }\r\n                }\r\n            } else {\r\n                labelOptions = {\r\n                    normal: {\r\n                        show: ctrl.panel.label.show,\r\n                        formatter: '{a|{a}}{abg|}\\n{hr|}\\n  {b|{b}：}{c}  {per|{d}%}  ',\r\n                        backgroundColor: '#eee',\r\n                        borderColor: '#aaa',\r\n                        borderWidth: 1,\r\n                        borderRadius: 4,\r\n                        rich: {\r\n                            a: {\r\n                                color: '#999',\r\n                                lineHeight: 22,\r\n                                align: 'center'\r\n                            },\r\n                            hr: {\r\n                                borderColor: '#aaa',\r\n                                width: '100%',\r\n                                borderWidth: 0.5,\r\n                                height: 0\r\n                            },\r\n                            b: {\r\n                                fontSize: 16,\r\n                                lineHeight: 33\r\n                            },\r\n                            per: {\r\n                                color: '#eee',\r\n                                backgroundColor: '#334455',\r\n                                padding: [2, 4],\r\n                                borderRadius: 2\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            }\r\n            option.series.push({\r\n                name: item.name,\r\n                type: 'pie',\r\n                radius: radius,\r\n                label: labelOptions,\r\n                data: itemData\r\n            })\r\n        });\r\n        option.legend.data = Array.from(legendData);\r\n        return option;\r\n    }\r\n\r\n    function barChartsOptions(echartPanel) {\r\n        let option;\r\n\r\n        let labelOption = {\r\n            normal: {\r\n                position: 'insideBottom',\r\n                distance: 15,\r\n                align: 'left',\r\n                verticalAlign: 'middle',\r\n                rotate: 90,\r\n                formatter: '{c}  {a}',\r\n                fontSize: 12,\r\n                rich: {\r\n                    name: {\r\n                        textBorderColor: '#fff'\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        if (ctrl.panel.show.label) {\r\n            labelOption.normal.show = ctrl.panel.label.show\r\n        }\r\n        console.log(data.textColor);\r\n        option = {\r\n            color: data.color,\r\n            legend: {\r\n                type: 'scroll',\r\n                show: ctrl.panel.legend.show,\r\n                textStyle: {\r\n                    color: data.textColor\r\n                }\r\n            },\r\n            tooltip: { // 图例\r\n                trigger: 'axis',\r\n                show: ctrl.panel.tooltip.show,\r\n                axisPointer: {\r\n                    type: 'shadow'\r\n                }\r\n            },\r\n            calculable: true,\r\n            xAxis: [\r\n                {\r\n                    type: 'category',\r\n                    axisTick: {show: false},\r\n                    data: data.metrics,\r\n                    axisLabel: {\r\n                        color: data.textColor,\r\n                        rotate: ctrl.panel.xlabel.rotate\r\n                    },\r\n                    nameTextStyle: {\r\n                        color: data.textColor,\r\n                    },\r\n                    axisLine: {lineStyle: {color: \"#999\"}},\r\n                    splitLine: {lineStyle: {color: \"#999\"}},\r\n                }\r\n            ],\r\n            yAxis: [\r\n                {\r\n                    type: 'value',\r\n                    axisLabel: {color: data.textColor},\r\n                    nameTextStyle: {color: data.textColor},\r\n                    axisLine: {lineStyle: {color: \"#999\"}},\r\n                    splitLine: {lineStyle: {color: \"#999\"}},\r\n                }\r\n            ],\r\n            grid: [{\"borderColor\": \"#F00\", show: false},],\r\n            series: []\r\n        };\r\n        if (data.type) {\r\n            option.xAxis[0].type = data.type;\r\n        }\r\n        if (ctrl.panel.legend.position === \"top\") {\r\n            option.legend.top = 10;\r\n            option.legend.orient = \"horizontal\";\r\n        } else if (ctrl.panel.legend.position === \"bottom\") {\r\n            option.legend.bottom = 10;\r\n            option.legend.orient = \"horizontal\";\r\n        } else if (ctrl.panel.legend.position === \"right\") {\r\n            option.legend.right = 10;\r\n            option.legend.orient = \"vertical\";\r\n        }\r\n\r\n        data.series.map(item => {\r\n            option.series.push({\r\n                name: item.name,\r\n                stack: ctrl.panel.stack,\r\n                type: ctrl.panel.chartsType,\r\n                label: labelOption,\r\n\r\n                showSymbol: false,\r\n                hoverAnimation: false,\r\n                data: item.data\r\n            })\r\n        });\r\n        return option;\r\n    }\r\n\r\n    function render(incrementRenderCounter) {\r\n        if (!ctrl.data) {\r\n            return;\r\n        }\r\n        data = ctrl.data;\r\n        if (0 === ctrl.data.length) {\r\n            noDataPoints();\r\n        } else {\r\n            addecharts();\r\n        }\r\n        if (incrementRenderCounter) {\r\n            ctrl.renderingCompleted();\r\n        }\r\n    }\r\n}\r\n\r\n"],"file":"rendering.js"}