{"version":3,"sources":["../src/rendering.js"],"names":["link","scope","elem","attrs","ctrl","data","panel","find","$tooltip","$","events","on","legendType","render","setTimeout","noDataPoints","html","addecharts","option","width","height","plotCanvas","container","echartPanel","echarts","init","chartsType","pieChartsOptions","barChartsOptions","mapChartsOptions","setOption","backgroundColor","css","seriesData","valueList","series","map","item","value","pop","push","name","get","geoJson","hideLoading","registerMap","tooltip","trigger","formatter","visualMap","min","max","Math","apply","text","realtime","calculable","inRange","color","type","mapType","itemStyle","normal","label","show","fontSize","emphasis","labelOptions","borderColor","borderWidth","borderRadius","rich","a","lineHeight","align","hr","b","per","padding","legend","position","top","orient","bottom","right","legendData","Set","maxRadius","slice","i","radius","length","_labelOptions","itemData","add","JSON","parse","stringify","toJSON","labelOption","distance","verticalAlign","rotate","textBorderColor","textStyle","axisPointer","xAxis","axisTick","metrics","axisLabel","nameTextStyle","axisLine","lineStyle","splitLine","yAxis","grid","stack","showSymbol","hoverAnimation","incrementRenderCounter","renderingCompleted","_"],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport $ from 'jquery';\nimport 'jquery.flot';\nimport 'jquery.flot.pie';\nimport echarts from './echarts/echarts.min';\n\nexport default function link(scope, elem, attrs, ctrl) {\n    var data;\n    var panel = ctrl.panel;\n    elem = elem.find('.echarts-panel__chart');\n    var $tooltip = $('<div id=\"tooltip\">');\n\n    ctrl.events.on('render', function () { // 触发刷新/重新加载事件\n        if (panel.legendType === 'Right side') {\n            render(false);\n            setTimeout(function () {\n                render(true);\n            }, 50);\n        } else {\n            render(true);\n        }\n    });\n\n\n    function noDataPoints() {\n        var html = '<div class=\"datapoints-warning\"><span class=\"small\">No data points</span></div>';\n        elem.html(html);\n    }\n\n    function addecharts() { // 绘图\n        let option;\n        var width = elem.width();\n        var height = ctrl.height;\n        // var size = Math.min(width, height);\n        const plotCanvas = $('<div style=\"height: 100%\"></div>');\n        elem.html(plotCanvas);\n        const container = plotCanvas[0];\n\n        var echartPanel = echarts.init(container);\n\n        if (ctrl.panel.chartsType === 'pie') {\n            option = pieChartsOptions(echartPanel)\n        } else if (ctrl.panel.chartsType === 'bar' || ctrl.panel.chartsType === 'line') {\n            option = barChartsOptions(echartPanel)\n        } else if (ctrl.panel.chartsType === 'map') {\n            option = mapChartsOptions(echartPanel);\n        }\n        if (option && typeof option === \"object\") {\n            echartPanel.setOption(option, true);\n        }\n        let backgroundColor = $('body').css('background-color')\n\n    }\n\n    function mapChartsOptions(echartPanel) {\n        let option = {};\n        let seriesData = [];\n        let valueList = [];\n        data.series.map(item => {\n            let value = item.data.pop().value[1];\n            valueList.push(value);\n            seriesData.push({\n                name: item.name,\n                value: value,\n            })\n        });\n        $.get('public/plugins/virnet-echarts-panel/echarts/datav-china.json', function (geoJson) {\n            echartPanel.hideLoading();\n            echarts.registerMap('china', geoJson);\n            option = {\n                tooltip: {\n                    trigger: 'item',\n                    formatter: '{b}<br/>{c}'\n                },\n                visualMap: {\n                    min: 0,\n                    max: Math.max.apply(null, valueList) * 0.8,\n                    text: ['High', 'Low'],\n                    realtime: false,\n                    calculable: true,\n                    inRange: {\n                        color: ['rgb(200,255,255)', 'rgb(36,104,202)']\n                    }\n                },\n                series: [\n                    {\n                        type: 'map',\n                        mapType: 'china', // 自定义扩展图表类型\n                        itemStyle: {\n                            normal: {\n                                label: {\n                                    show: ctrl.panel.label.show,\n                                    fontSize: ctrl.panel.label.fontSize\n                                }\n                            },\n                            emphasis: {label: {show: true}}\n                        },\n                        data: seriesData\n                    }\n                ]\n\n            };\n            echartPanel.setOption(option, true);\n        });\n        return option;\n    }\n\n    function pieChartsOptions(echartPanel) {\n        let labelOptions = {\n            normal: {\n                show: false,\n                formatter: '{a|{a}}{abg|}\\n{hr|}\\n  {b|{b}：}{c}  {per|{d}%}  ',\n                backgroundColor: '#eee',\n                borderColor: '#aaa',\n                borderWidth: 1,\n                borderRadius: 4,\n                rich: {\n                    a: {\n                        color: '#999',\n                        lineHeight: 22,\n                        align: 'center'\n                    },\n                    hr: {\n                        borderColor: '#aaa',\n                        width: '100%',\n                        borderWidth: 0.5,\n                        height: 0\n                    },\n                    b: {\n                        fontSize: 16,\n                        lineHeight: 33\n                    },\n                    per: {\n                        color: '#eee',\n                        backgroundColor: '#334455',\n                        padding: [2, 4],\n                        borderRadius: 2\n                    }\n                }\n            }\n        };\n        let option = {\n            tooltip: {\n                trigger: 'item',\n                formatter: \"{a} <br/>{b}: {c} ({d}%)\"\n            },\n            legend: {\n                type: 'scroll',\n                show: ctrl.panel.legend.show,\n                data: []\n            },\n            series: []\n        };\n\n        if (ctrl.panel.legend.position === \"top\") {\n            option.legend.top = 10;\n            option.legend.orient = \"horizontal\";\n        } else if (ctrl.panel.legend.position === \"bottom\") {\n            option.legend.bottom = 10;\n            option.legend.orient = \"horizontal\";\n        } else if (ctrl.panel.legend.position === \"right\") {\n            option.legend.right = 10;\n            option.legend.orient = \"vertical\";\n        }\n        let legendData = new Set();\n        let maxRadius;\n        if (ctrl.panel.label.show) {\n            maxRadius = 80;\n        } else {\n            maxRadius = 100;\n        }\n        data.series = data.series.slice(0, 5);\n        data.series.map((item, i) => {\n            let radius = [\n                maxRadius * (data.series.length - i - 1) / data.series.length + '%',\n                maxRadius * (data.series.length - i) / data.series.length * 0.9 + '%'\n            ];\n            let _labelOptions;\n            let itemData = item.data.map(i => {\n                legendData.add(i.name);\n                return {name: i.name, value: i.value[1]}\n            });\n\n            if (i === 0) {\n                _labelOptions = JSON.parse(JSON.stringify(labelOptions));\n                _labelOptions.normal.show = ctrl.panel.label.show;\n            } else {\n                _labelOptions = {\n                    normal: {\n                        position: 'inner'\n                    }\n                }\n            }\n            option.series.push({\n                name: item.name,\n                type: 'pie',\n                radius: radius,\n                label: _labelOptions,\n                data: itemData\n            })\n        });\n        option.legend.data = legendData.toJSON();\n        return option;\n    }\n\n    function barChartsOptions(echartPanel) {\n        let option;\n\n        let labelOption = {\n            normal: {\n                position: 'insideBottom',\n                distance: 15,\n                align: 'left',\n                verticalAlign: 'middle',\n                rotate: 90,\n                formatter: '{c}  {a}',\n                fontSize: 12,\n                rich: {\n                    name: {\n                        textBorderColor: '#fff'\n                    }\n                }\n            }\n        };\n        if (ctrl.panel.show.label) {\n            labelOption.normal.show = ctrl.panel.label.show\n        }\n\n        option = {\n            color: data.color,\n            legend: {\n                type: 'scroll',\n                show: ctrl.panel.legend.show,\n                textStyle: {\n                    color: '#999'\n                }\n            },\n            tooltip: { // 图例\n                trigger: 'axis',\n                show: ctrl.panel.tooltip.show,\n                axisPointer: {\n                    type: 'shadow'\n                }\n            },\n            calculable: true,\n            xAxis: [\n                {\n                    type: 'category',\n                    axisTick: {show: false},\n                    data: data.metrics,\n                    axisLabel: {color: \"#999\"},\n                    nameTextStyle: {color: \"#999\"},\n                    axisLine: {lineStyle: {color: \"#999\"}},\n                    splitLine: {lineStyle: {color: \"#999\"}},\n                }\n            ],\n            yAxis: [\n                {\n                    type: 'value',\n                    axisLabel: {color: \"#999\"},\n                    nameTextStyle: {color: \"#999\"},\n                    axisLine: {lineStyle: {color: \"#999\"}},\n                    splitLine: {lineStyle: {color: \"#999\"}},\n                }\n            ],\n            grid: [{\"borderColor\": \"#F00\", show: false},],\n            series: []\n        };\n        if (data.type) {\n            option.xAxis[0].type = data.type;\n        }\n        if (ctrl.panel.legend.position === \"top\") {\n            option.legend.top = 10;\n            option.legend.orient = \"horizontal\";\n        } else if (ctrl.panel.legend.position === \"bottom\") {\n            option.legend.bottom = 10;\n            option.legend.orient = \"horizontal\";\n        } else if (ctrl.panel.legend.position === \"right\") {\n            option.legend.right = 10;\n            option.legend.orient = \"vertical\";\n        }\n\n        data.series.map(item => {\n            option.series.push({\n                name: item.name,\n                stack: ctrl.panel.stack,\n                type: ctrl.panel.chartsType,\n                label: labelOption,\n\n                showSymbol: false,\n                hoverAnimation: false,\n                data: item.data\n            })\n        });\n        return option;\n    }\n\n    function render(incrementRenderCounter) {\n        if (!ctrl.data) {\n            return;\n        }\n        data = ctrl.data;\n        if (0 === ctrl.data.length) {\n            noDataPoints();\n        } else {\n            addecharts();\n        }\n        if (incrementRenderCounter) {\n            ctrl.renderingCompleted();\n        }\n    }\n}\n\n"],"file":"rendering.js"}