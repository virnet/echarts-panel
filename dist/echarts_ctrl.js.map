{"version":3,"sources":["../src/echarts_ctrl.js"],"names":["MetricsPanelCtrl","_","kbn","TimeSeries","rendering","moment","EChartsCtrl","$scope","$injector","$rootScope","hiddenSeries","panelDefaults","show","stack","legend","tooltip","label","chartsType","values","position","fontSize","links","datasource","maxDataPoints","interval","targets","cacheTimeout","breakPoint","aliasColors","format","valueName","strokeWidth","combine","threshold","defaults","panel","events","on","onRender","bind","onDataReceived","onDataError","onInitEditMode","addEditorTab","unitFormats","getUnitFormats","changeChartsType","subItem","value","render","series","color","alias","data","parseSeries","valueList","Math","max","apply","min","i","length","undefined","sum","serieMap","serieList","concat","map","serie","datapoints","datapoint","target","push","idx","name","getValue","metric","colors","parseMultipleReversalSeries","parseMultipleMetricSeries","metrics","Set","type","add","dateFormat","toJSON","sort","_data","dataList","seriesHandler","seriesData","nameKey","metricKey","valueKey","seriesDataMap","rows","item","_item","index","columns","key","text","isNumber","decimals","scaledDecimals","delta","dec","floor","log","LN10","magn","pow","norm","size","result","decimalInfo","getDecimalsForValue","formatFunc","valueFormats","scope","elem","attrs","ctrl","templateUrl"],"mappings":"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","sourcesContent":["import {MetricsPanelCtrl} from 'app/plugins/sdk';\nimport _ from 'lodash';\nimport kbn from 'app/core/utils/kbn';\nimport TimeSeries from 'app/core/time_series';\nimport rendering from './rendering';\nimport moment from 'moment';\n\nexport class EChartsCtrl extends MetricsPanelCtrl {\n    constructor($scope, $injector, $rootScope) { // 初始化\n        super($scope, $injector);\n        this.$rootScope = $rootScope;\n        this.hiddenSeries = {};\n        var panelDefaults = { // 设置默认值\n            show: {\n                stack: true,\n                legend: true,\n                tooltip: true,\n                label: true,\n            },\n            chartsType: 'bar',\n            legend: {\n                show: true, // disable/enable legend\n                values: true,\n                position: 'right',\n            },\n            label:{\n                show: false,\n                fontSize:12,\n            },\n            stack:false,\n            tooltip:{\n                show: true,\n            },\n            links: [],\n            datasource: null,\n            maxDataPoints: 3,\n            interval: null,\n            targets: [{}],\n            cacheTimeout: null,\n            breakPoint: '50%',\n            aliasColors: {},\n            format: 'short',\n            valueName: 'current',\n            strokeWidth: 1,\n            fontSize: '80%',\n            combine: {\n                threshold: 0.0,\n                label: 'Others'\n            }\n        };\n\n        _.defaults(this.panel, panelDefaults);\n        _.defaults(this.panel.legend, panelDefaults.legend);\n\n        this.events.on('render', this.onRender.bind(this));\n        this.events.on('data-received', this.onDataReceived.bind(this));\n        this.events.on('data-error', this.onDataError.bind(this));\n        this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n        this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n\n    }\n\n    onInitEditMode() {  // 初始化编辑模块\n        this.addEditorTab('Options', \"public/plugins/virnet-echarts-panel/editor.html\", 2);  // 配置选项页\n        this.unitFormats = kbn.getUnitFormats();  //从Grafana中获取内置单位选项\n        this.changeChartsType()\n    }\n\n    setUnitFormat(subItem) {   // 选中单位事件触发该函数\n        this.panel.format = subItem.value;\n        this.render();\n    }\n    changeChartsType(){\n        if(this.panel.chartsType==='pie'){\n            this.panel.show.label=true;\n            this.panel.show.legend=true;\n            this.panel.show.stack=false;\n        }else if(this.panel.chartsType==='bar'){\n            this.panel.show.label=true;\n            this.panel.show.legend=true;\n            this.panel.show.stack=true;\n        }else if(this.panel.chartsType==='line'){\n            this.panel.show.label=false;\n            this.panel.show.legend=true;\n            this.panel.show.stack=true;\n        }else if(this.panel.chartsType==='map'){\n            this.panel.show.label=true;\n            this.panel.show.legend=false;\n            this.panel.show.stack=false;\n        }\n        this.render();\n    }\n    onDataError() {  // 数据错误事件触发该函数\n        this.series = [];\n        this.render();\n    }\n\n    changeSeriesColor(series, color) {\n        series.color = color;\n        this.panel.aliasColors[series.alias] = series.color;\n        this.render();\n    }\n\n    onRender() {  // 刷新事件函数\n        this.data = this.parseSeries(this.series);\n    }\n\n    getValue(valueList) {\n        if (this.panel.valueName === \"max\") {\n            return Math.max.apply(null, valueList)\n        } else if (this.panel.valueName === \"min\") {\n            return Math.min.apply(null, valueList)\n        } else if (this.panel.valueName === \"current\") {\n            for(let i=valueList.length-1; i>=0;i--){\n                if(valueList[i]!==undefined){\n                    return valueList[i];\n                }\n            }\n            return valueList[-1]\n        } else if (this.panel.valueName === \"avg\") {\n            let sum = 0;\n            for (let i = 0; i < valueList.length; i++) {\n                sum += valueList[i];\n            }\n            return ~~(sum / valueList.length * 100) / 100;\n        } else if (this.panel.valueName === \"total\") {\n            return valueList.length;\n        } else if (this.panel.valueName === \"sum\") {\n            let sum = 0;\n            for (let i = 0; i < valueList.length; i++) {\n                sum += valueList[i];\n            }\n            return sum;\n        }\n    }\n    parseSignalMetricSeries(series) { // 数据格式化\n        let serieMap = {};\n        let data = {\"metrics\": [], \"series\": [],\"color\":[]};\n        let serieList = [].concat.apply([], series);\n        serieList.map((serie, i) => {\n            serie.datapoints.map((datapoint, i) => {\n                if (!serieMap[serie.target]) {\n                    serieMap[serie.target] = []\n                }\n                serieMap[serie.target].push(datapoint[1])\n            })\n        });\n        let idx=0;\n        for (let name in serieMap) {\n            data[\"data\"].push({\"name\":name,value:this.getValue(serieMap[name][metric])})\n            data.color.push(this.$rootScope.colors[idx++]);\n        }\n        return data;\n    }\n    parseSeries(series) { // 数据格式化\n\n        if(this.panel.chartsType==='pie'){\n            return this.parseMultipleReversalSeries(series)\n        }else if(this.panel.chartsType==='bar' ||this.panel.chartsType==='line' ){\n            return this.parseMultipleMetricSeries(series)\n        }else if(this.panel.chartsType==='map'){\n            return this.parseMultipleMetricSeries(series);\n        }\n    }\n    parseMultipleMetricSeries(series){\n        var metrics = new Set();\n        var targets = new Set();\n        var data = {\"metrics\": [], \"series\": [],\"color\":[]};\n        var serieList = [].concat.apply([], series); // 降低数组维度\n        var serieMap = {};\n\n        serieList.map((serie, i) => {\n            if(serie.type==='time_series'){\n                data.type=\"time\";\n            }\n            targets.add(serie.target);\n            serie.datapoints.map((datapoint, i) => {\n                if(datapoint[0]===null){\n                    return\n                }\n                let metric;\n                if (this.panel.dateFormat) {\n                    metric = moment(datapoint[1]).format(this.panel.dateFormat)\n                } else if(serie.type==='time_series'){\n                    metric = moment(datapoint[1]).format(\"YYYY-MM-DD HH:mm:ss\")\n                }else{\n                    metric = datapoint[1]\n                }\n                if (!serieMap[serie.target]) {\n                    serieMap[serie.target] = {}\n                }\n                if (!serieMap[serie.target][metric]) {\n                    metrics.add(metric);\n                    serieMap[serie.target][metric] = [];\n                }\n                serieMap[serie.target][metric].push(datapoint[0]);\n            })\n        });\n        data[\"targets\"] = targets.toJSON().sort();\n        data[\"metrics\"] = metrics.toJSON().sort();\n        var idx=0;\n        for (var name in serieMap) {\n            var _data = {}\n            _data[\"name\"] = name\n            _data[\"data\"] = []\n            for (let metric in serieMap[name]){\n                _data[\"data\"].push({\"name\":metric,value:[metric,this.getValue(serieMap[name][metric])]})\n            }\n            data.color.push(this.$rootScope.colors[idx++]);\n            data.series.push(_data);\n        }\n        return data;\n    }\n    parseMultipleReversalSeries(series){ //序列反转\n        var metrics = new Set();\n        var targets = new Set();\n        var data = {\"metrics\": [], \"series\": [],\"color\":[]};\n        var serieList = [].concat.apply([], series); // 降低数组维度\n        var serieMap = {};\n\n        serieList.map((serie, i) => {\n            if(serie.type==='time_series'){\n                data.type=\"time\";\n            }\n            targets.add(serie.target);\n            serie.datapoints.map((datapoint, i) => {\n                if(datapoint[0]===null){\n                    return\n                }\n                let metric;\n                if (this.panel.dateFormat) {\n                    metric = moment(datapoint[1]).format(this.panel.dateFormat)\n                } else if(serie.type==='time_series'){\n                    metric = moment(datapoint[1]).format(\"YYYY-MM-DD HH:mm:ss\")\n                }else{\n                    metric = datapoint[1]\n                }\n                if (!serieMap[metric]) {\n                    serieMap[metric] = {}\n                }\n                if (!serieMap[metric][serie.target]) {\n                    metrics.add(metric);\n                    serieMap[metric][serie.target] = [];\n                }\n                serieMap[metric][serie.target].push(datapoint[0]);\n            })\n        });\n        data[\"metrics\"] = metrics.toJSON().sort();\n        data[\"targets\"] = targets.toJSON().sort();\n        let idx=0;\n        for (let metric in serieMap) {\n            let _data = {}\n            _data[\"name\"] = metric;\n            _data[\"data\"] = []\n            for (let name in serieMap[metric]){\n                _data[\"data\"].push({\"name\":name,value:[name,this.getValue(serieMap[metric][name])]})\n            }\n            data.color.push(this.$rootScope.colors[idx++]);\n            data.series.push(_data);\n        }\n        return data;\n    }\n\n    onDataReceived(dataList) {\n        this.series = dataList.map(this.seriesHandler.bind(this));\n        this.data = this.parseSeries(this.series);\n        this.render(this.data);\n    }\n\n    seriesHandler(seriesData) { // 元数据处理\n        var series = [];\n        if (seriesData.type === \"table\") {\n            var nameKey = \"name\";\n            var metricKey = \"metric\";\n            var valueKey = \"value\";\n            var seriesDataMap = {}\n            seriesData.rows.map(item => {\n                var _item = {};\n                for (var index in seriesData.columns) {\n                    var key = seriesData.columns[index].text\n                    _item[key] = item[index]\n                }\n                if (!seriesDataMap[_item[nameKey]]) {\n                    seriesDataMap[_item[nameKey]] = {\"target\": _item[nameKey], \"datapoints\": []}\n                }\n                seriesDataMap[_item[nameKey]].datapoints.push([_item[valueKey], _item[metricKey]])\n                return _item\n            });\n            for (var key in seriesDataMap) {\n                series.push(seriesDataMap[key])\n            }\n        } else {\n            seriesData.type='time_series'\n            series.push(seriesData)\n        }\n        //SELECT name as name,item as metric,value FROM monitor.test;\n        return series;\n    }\n\n    getDecimalsForValue(value) {\n        if (_.isNumber(this.panel.decimals)) {\n            return {decimals: this.panel.decimals, scaledDecimals: null};\n        }\n\n        var delta = value / 2;\n        var dec = -Math.floor(Math.log(delta) / Math.LN10);\n\n        var magn = Math.pow(10, -dec);\n        var norm = delta / magn; // norm is between 1.0 and 10.0\n        var size;\n\n        if (norm < 1.5) {\n            size = 1;\n        } else if (norm < 3) {\n            size = 2;\n            // special case for 2.5, requires an extra decimal\n            if (norm > 2.25) {\n                size = 2.5;\n                ++dec;\n            }\n        } else if (norm < 7.5) {\n            size = 5;\n        } else {\n            size = 10;\n        }\n\n        size *= magn;\n\n        // reduce starting decimals if not needed\n        if (Math.floor(value) === value) {\n            dec = 0;\n        }\n\n        var result = {};\n        result.decimals = Math.max(0, dec);\n        result.scaledDecimals = result.decimals - Math.floor(Math.log(size) / Math.LN10) + 2;\n\n        return result;\n    }\n\n    formatValue(value) {\n        var decimalInfo = this.getDecimalsForValue(value);\n        var formatFunc = kbn.valueFormats[this.panel.format];\n        if (formatFunc) {\n            return formatFunc(value, decimalInfo.decimals, decimalInfo.scaledDecimals);\n        }\n        return value;\n    }\n\n    link(scope, elem, attrs, ctrl) {\n        rendering(scope, elem, attrs, ctrl);\n    }\n\n    toggleSeries(serie) {\n        if (this.hiddenSeries[serie.label]) {\n            delete this.hiddenSeries[serie.label];\n        } else {\n            this.hiddenSeries[serie.label] = true;\n        }\n        this.render();\n    }\n\n}\n\nEChartsCtrl.templateUrl = 'module.html';\n"],"file":"echarts_ctrl.js"}