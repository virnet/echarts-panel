{"version":3,"sources":["../src/echarts_ctrl.js"],"names":["MetricsPanelCtrl","_","kbn","TimeSeries","rendering","moment","EChartsCtrl","$scope","$injector","$rootScope","hiddenSeries","panelDefaults","show","stack","legend","tooltip","label","chartsType","values","position","fontSize","xlabel","rotate","links","datasource","maxDataPoints","interval","targets","cacheTimeout","breakPoint","aliasColors","format","valueName","strokeWidth","combine","threshold","defaults","panel","events","on","onRender","bind","onDataReceived","onDataError","onInitEditMode","addEditorTab","unitFormats","getUnitFormats","changeChartsType","subItem","value","render","isBar","isMap","isLine","isPie","series","color","alias","data","parseSeries","valueList","Math","max","apply","min","i","length","undefined","sum","serieMap","serieList","concat","map","serie","datapoints","datapoint","target","push","idx","name","getValue","metric","colors","parseMultipleReversalSeries","parseMultipleMetricSeries","metrics","Set","$","css","type","add","dateFormat","Array","from","_data","dataList","seriesHandler","seriesData","nameKey","metricKey","valueKey","seriesDataMap","rows","item","_item","index","columns","key","text","isNumber","decimals","scaledDecimals","delta","dec","floor","log","LN10","magn","pow","norm","size","result","decimalInfo","getDecimalsForValue","formatFunc","valueFormats","scope","elem","attrs","ctrl","templateUrl"],"mappings":"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","sourcesContent":["import {MetricsPanelCtrl} from 'app/plugins/sdk';\r\nimport _ from 'lodash';\r\nimport kbn from 'app/core/utils/kbn';\r\nimport TimeSeries from 'app/core/time_series';\r\nimport rendering from './rendering';\r\nimport moment from 'moment';\r\n\r\nexport class EChartsCtrl extends MetricsPanelCtrl {\r\n    constructor($scope, $injector, $rootScope) { // 初始化\r\n        super($scope, $injector);\r\n        this.$rootScope = $rootScope;\r\n        this.hiddenSeries = {};\r\n        var panelDefaults = { // 设置默认值\r\n            show: {\r\n                stack: true,\r\n                legend: true,\r\n                tooltip: true,\r\n                label: true,\r\n            },\r\n            chartsType: 'bar',\r\n            legend: {\r\n                show: true, // disable/enable legend\r\n                values: true,\r\n                position: 'right',\r\n            },\r\n            label: {\r\n                show: false,\r\n                fontSize: 12,\r\n            },\r\n            xlabel:{rotate:0},\r\n            stack: false,\r\n            tooltip: {\r\n                show: true,\r\n            },\r\n\r\n            links: [],\r\n            datasource: null,\r\n            maxDataPoints: 3,\r\n            interval: null,\r\n            targets: [{}],\r\n            cacheTimeout: null,\r\n            breakPoint: '50%',\r\n            aliasColors: {},\r\n            format: 'short',\r\n            valueName: 'current',\r\n            strokeWidth: 1,\r\n            fontSize: '80%',\r\n            combine: {\r\n                threshold: 0.0,\r\n                label: 'Others'\r\n            }\r\n        };\r\n\r\n        _.defaults(this.panel, panelDefaults);\r\n        _.defaults(this.panel.legend, panelDefaults.legend);\r\n\r\n        this.events.on('render', this.onRender.bind(this));\r\n        this.events.on('data-received', this.onDataReceived.bind(this));\r\n        this.events.on('data-error', this.onDataError.bind(this));\r\n        this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\r\n        this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\r\n\r\n    }\r\n\r\n    onInitEditMode() {  // 初始化编辑模块\r\n        this.addEditorTab('Options', \"public/plugins/virnet-echarts-panel/editor.html\", 2);  // 配置选项页\r\n        this.unitFormats = kbn.getUnitFormats();  //从Grafana中获取内置单位选项\r\n        this.changeChartsType()\r\n    }\r\n\r\n    setUnitFormat(subItem) {   // 选中单位事件触发该函数\r\n        this.panel.format = subItem.value;\r\n        this.render();\r\n    }\r\n\r\n    changeChartsType() {\r\n        if (this.panel.chartsType === 'pie') {\r\n            this.panel.show.label = true;\r\n            this.panel.show.legend = true;\r\n            this.panel.show.stack = false;\r\n            this.panel.isBar =this.panel.isMap =this.panel.isLine= true;\r\n            this.panel.isPie = true;\r\n        } else if (this.panel.chartsType === 'bar') {\r\n            this.panel.show.label = true;\r\n            this.panel.show.legend = true;\r\n            this.panel.show.stack = true;\r\n            this.panel.isPie =this.panel.isMap =this.panel.isLine= false;\r\n            this.panel.isBar = true;\r\n        } else if (this.panel.chartsType === 'line') {\r\n            this.panel.show.label = false;\r\n            this.panel.show.legend = true;\r\n            this.panel.show.stack = true;\r\n            this.panel.isPie =this.panel.isMap =this.panel.isBar= false;\r\n            this.panel.isLine = true;\r\n        } else if (this.panel.chartsType === 'map') {\r\n            this.panel.show.label = true;\r\n            this.panel.show.legend = false;\r\n            this.panel.show.stack = false;\r\n            this.panel.isPie =this.panel.isLine =this.panel.isBar= false;\r\n            this.panel.isMap = true;\r\n        }\r\n        this.render();\r\n    }\r\n\r\n    onDataError() {  // 数据错误事件触发该函数\r\n        this.series = [];\r\n        this.render();\r\n    }\r\n\r\n    changeSeriesColor(series, color) {\r\n        series.color = color;\r\n        this.panel.aliasColors[series.alias] = series.color;\r\n        this.render();\r\n    }\r\n\r\n    onRender() {  // 刷新事件函数\r\n        this.data = this.parseSeries(this.series);\r\n    }\r\n\r\n    getValue(valueList) {\r\n        if (this.panel.valueName === \"max\") {\r\n            return Math.max.apply(null, valueList)\r\n        } else if (this.panel.valueName === \"min\") {\r\n            return Math.min.apply(null, valueList)\r\n        } else if (this.panel.valueName === \"current\") {\r\n            for (let i = valueList.length - 1; i >= 0; i--) {\r\n                if (valueList[i] !== undefined) {\r\n                    return valueList[i];\r\n                }\r\n            }\r\n            return valueList[-1]\r\n        } else if (this.panel.valueName === \"avg\") {\r\n            let sum = 0;\r\n            for (let i = 0; i < valueList.length; i++) {\r\n                sum += valueList[i];\r\n            }\r\n            return ~~(sum / valueList.length * 100) / 100;\r\n        } else if (this.panel.valueName === \"total\") {\r\n            return valueList.length;\r\n        } else if (this.panel.valueName === \"sum\") {\r\n            let sum = 0;\r\n            for (let i = 0; i < valueList.length; i++) {\r\n                sum += valueList[i];\r\n            }\r\n            return sum;\r\n        }\r\n    }\r\n\r\n    parseSignalMetricSeries(series) { // 数据格式化\r\n        let serieMap = {};\r\n        let data = {\"metrics\": [], \"series\": [], \"color\": []};\r\n        let serieList = [].concat.apply([], series);\r\n        serieList.map((serie, i) => {\r\n            serie.datapoints.map((datapoint, i) => {\r\n                if (!serieMap[serie.target]) {\r\n                    serieMap[serie.target] = []\r\n                }\r\n                serieMap[serie.target].push(datapoint[1])\r\n            })\r\n        });\r\n        let idx = 0;\r\n        for (let name in serieMap) {\r\n            data[\"data\"].push({\"name\": name, value: this.getValue(serieMap[name][metric])})\r\n            data.color.push(this.$rootScope.colors[idx++]);\r\n        }\r\n        return data;\r\n    }\r\n\r\n    parseSeries(series) { // 数据格式化\r\n\r\n        if (this.panel.chartsType === 'pie') {\r\n            return this.parseMultipleReversalSeries(series)\r\n        } else if (this.panel.chartsType === 'bar' || this.panel.chartsType === 'line') {\r\n            return this.parseMultipleMetricSeries(series)\r\n        } else if (this.panel.chartsType === 'map') {\r\n            return this.parseMultipleMetricSeries(series);\r\n        }\r\n    }\r\n\r\n    parseMultipleMetricSeries(series) {\r\n        var metrics = new Set();\r\n        var targets = new Set();\r\n        var data = {\"metrics\": [], \"series\": [], \"color\": [], \"textColor\":$(\".navbar-page-btn\").css(\"color\") };\r\n        var serieList = [].concat.apply([], series); // 降低数组维度\r\n        var serieMap = {};\r\n\r\n        serieList.map((serie, i) => {\r\n            if (serie.type === 'time_series') {\r\n                data.type = \"time\";\r\n            }\r\n            targets.add(serie.target);\r\n            serie.datapoints.map((datapoint, i) => {\r\n                if (datapoint[0] === null) {\r\n                    return\r\n                }\r\n                let metric;\r\n                if (this.panel.dateFormat) {\r\n                    metric = moment(datapoint[1]).format(this.panel.dateFormat)\r\n                } else if (serie.type === 'time_series') {\r\n                    metric = moment(datapoint[1]).format(\"YYYY-MM-DD HH:mm:ss\")\r\n                } else {\r\n                    metric = datapoint[1]\r\n                }\r\n                if (!serieMap[serie.target]) {\r\n                    serieMap[serie.target] = {}\r\n                }\r\n                if (!serieMap[serie.target][metric]) {\r\n                    metrics.add(metric);\r\n                    serieMap[serie.target][metric] = [];\r\n                }\r\n                serieMap[serie.target][metric].push(datapoint[0]);\r\n            })\r\n        });\r\n        data[\"targets\"] = Array.from(targets);\r\n        data[\"metrics\"] = Array.from(metrics);\r\n        var idx = 0;\r\n        for (var name in serieMap) {\r\n            var _data = {}\r\n            _data[\"name\"] = name\r\n            _data[\"data\"] = []\r\n            for (let metric in serieMap[name]) {\r\n                _data[\"data\"].push({\"name\": metric, value: [metric, this.getValue(serieMap[name][metric])]})\r\n            }\r\n            data.color.push(this.$rootScope.colors[idx++]);\r\n            data.series.push(_data);\r\n        }\r\n        return data;\r\n    }\r\n\r\n    parseMultipleReversalSeries(series) { //序列反转\r\n        var metrics = new Set();\r\n        var targets = new Set();\r\n        var data = {\"metrics\": [], \"series\": [], \"color\": []};\r\n        var serieList = [].concat.apply([], series); // 降低数组维度\r\n        var serieMap = {};\r\n\r\n        serieList.map((serie, i) => {\r\n            if (serie.type === 'time_series') {\r\n                data.type = \"time\";\r\n            }\r\n            targets.add(serie.target);\r\n            serie.datapoints.map((datapoint, i) => {\r\n                if (datapoint[0] === null) {\r\n                    return\r\n                }\r\n                let metric;\r\n                if (this.panel.dateFormat) {\r\n                    metric = moment(datapoint[1]).format(this.panel.dateFormat)\r\n                } else if (serie.type === 'time_series') {\r\n                    metric = moment(datapoint[1]).format(\"YYYY-MM-DD HH:mm:ss\")\r\n                } else {\r\n                    metric = datapoint[1]\r\n                }\r\n                if (!serieMap[metric]) {\r\n                    serieMap[metric] = {}\r\n                }\r\n                if (!serieMap[metric][serie.target]) {\r\n                    metrics.add(metric);\r\n                    serieMap[metric][serie.target] = [];\r\n                }\r\n                serieMap[metric][serie.target].push(datapoint[0]);\r\n            })\r\n        });\r\n        data[\"targets\"] = Array.from(targets);\r\n        data[\"metrics\"] = Array.from(metrics);\r\n        let idx = 0;\r\n        for (let metric in serieMap) {\r\n            let _data = {}\r\n            _data[\"name\"] = metric;\r\n            _data[\"data\"] = []\r\n            for (let name in serieMap[metric]) {\r\n                _data[\"data\"].push({\"name\": name, value: [name, this.getValue(serieMap[metric][name])]})\r\n            }\r\n            data.color.push(this.$rootScope.colors[idx++]);\r\n            data.series.push(_data);\r\n        }\r\n        return data;\r\n    }\r\n\r\n    onDataReceived(dataList) {\r\n        this.series = dataList.map(this.seriesHandler.bind(this));\r\n        this.data = this.parseSeries(this.series);\r\n        this.render(this.data);\r\n    }\r\n\r\n    seriesHandler(seriesData) { // 元数据处理\r\n        var series = [];\r\n        if (seriesData.type === \"table\") {\r\n            var nameKey = \"name\";\r\n            var metricKey = \"metric\";\r\n            var valueKey = \"value\";\r\n            var seriesDataMap = {}\r\n            seriesData.rows.map(item => {\r\n                var _item = {};\r\n                for (var index in seriesData.columns) {\r\n                    var key = seriesData.columns[index].text\r\n                    _item[key] = item[index]\r\n                }\r\n                if (!seriesDataMap[_item[nameKey]]) {\r\n                    seriesDataMap[_item[nameKey]] = {\"target\": _item[nameKey], \"datapoints\": []}\r\n                }\r\n                seriesDataMap[_item[nameKey]].datapoints.push([_item[valueKey], _item[metricKey]])\r\n                return _item\r\n            });\r\n            for (var key in seriesDataMap) {\r\n                series.push(seriesDataMap[key])\r\n            }\r\n        } else {\r\n            seriesData.type = 'time_series'\r\n            series.push(seriesData)\r\n        }\r\n        //SELECT name as name,item as metric,value FROM monitor.test;\r\n        return series;\r\n    }\r\n\r\n    getDecimalsForValue(value) {\r\n        if (_.isNumber(this.panel.decimals)) {\r\n            return {decimals: this.panel.decimals, scaledDecimals: null};\r\n        }\r\n\r\n        var delta = value / 2;\r\n        var dec = -Math.floor(Math.log(delta) / Math.LN10);\r\n\r\n        var magn = Math.pow(10, -dec);\r\n        var norm = delta / magn; // norm is between 1.0 and 10.0\r\n        var size;\r\n\r\n        if (norm < 1.5) {\r\n            size = 1;\r\n        } else if (norm < 3) {\r\n            size = 2;\r\n            // special case for 2.5, requires an extra decimal\r\n            if (norm > 2.25) {\r\n                size = 2.5;\r\n                ++dec;\r\n            }\r\n        } else if (norm < 7.5) {\r\n            size = 5;\r\n        } else {\r\n            size = 10;\r\n        }\r\n\r\n        size *= magn;\r\n\r\n        // reduce starting decimals if not needed\r\n        if (Math.floor(value) === value) {\r\n            dec = 0;\r\n        }\r\n\r\n        var result = {};\r\n        result.decimals = Math.max(0, dec);\r\n        result.scaledDecimals = result.decimals - Math.floor(Math.log(size) / Math.LN10) + 2;\r\n\r\n        return result;\r\n    }\r\n\r\n    formatValue(value) {\r\n        var decimalInfo = this.getDecimalsForValue(value);\r\n        var formatFunc = kbn.valueFormats[this.panel.format];\r\n        if (formatFunc) {\r\n            return formatFunc(value, decimalInfo.decimals, decimalInfo.scaledDecimals);\r\n        }\r\n        return value;\r\n    }\r\n\r\n    link(scope, elem, attrs, ctrl) {\r\n        rendering(scope, elem, attrs, ctrl);\r\n    }\r\n\r\n    toggleSeries(serie) {\r\n        if (this.hiddenSeries[serie.label]) {\r\n            delete this.hiddenSeries[serie.label];\r\n        } else {\r\n            this.hiddenSeries[serie.label] = true;\r\n        }\r\n        this.render();\r\n    }\r\n\r\n}\r\n\r\nEChartsCtrl.templateUrl = 'module.html';\r\n"],"file":"echarts_ctrl.js"}